(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{281:function(e,t,o){"use strict";o.r(t);var n=o(9),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h3",{attrs:{id:"react-lifecycle-methods"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#react-lifecycle-methods"}},[e._v("#")]),e._v(" React Lifecycle Methods")]),e._v(" "),o("p",[e._v("React lifecycle methods can be categorized as:")]),e._v(" "),o("ul",[o("li",[e._v("Mounting: constructor -> getDerivedStateFromProps -> render -> componentDidMount")]),e._v(" "),o("li",[e._v("Updating: shouldComponentUpdate -> getDerivedStateFromProps -> getSnapshotBeforeUpdate -> componentDidUpdate")]),e._v(" "),o("li",[e._v("Unmounting: componentWillUnmount")])]),e._v(" "),o("h4",{attrs:{id:"details-of-lifecycle-methods"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#details-of-lifecycle-methods"}},[e._v("#")]),e._v(" Details of lifecycle methods:")]),e._v(" "),o("p",[o("code",[e._v("constructor")]),e._v(": always run first, usually where to set the state and get the props (if component has parent component)")]),e._v(" "),o("p",[o("code",[e._v("getDerivedStateFromProps")]),e._v(": will get called by following situations:")]),e._v(" "),o("ul",[o("li",[e._v("component is initialized")]),e._v(" "),o("li",[e._v("receiving new props whether they are getting changes or not")]),e._v(" "),o("li",[e._v("parent component is re-rendered\n(Only purpose is enabling for updating internal state as results of changes in props)")])]),e._v(" "),o("p",[o("code",[e._v("render")]),e._v(": make sure the component is rendered / mounted in the DOM properly")]),e._v(" "),o("p",[o("code",[e._v("componentDidMount")]),e._v(": after component has rendered (mounted), usually for API call (eg: fetch data)")]),e._v(" "),o("p",[o("code",[e._v("shouldComponentUpdate")]),e._v(": is for developer to control for whether trigger re-rendering component or not")]),e._v(" "),o("p",[o("code",[e._v("componentDidUpdate")]),e._v(": It has 2 arguments ("),o("code",[e._v("prevProps")]),e._v(" "),o("code",[e._v("prevState")]),e._v(") to compare with current state or props and it normally get triggered when calling "),o("code",[e._v("this.setState({...props})")]),e._v(" (eg: if previous state is different from current state, then trigger data re-fetch)")]),e._v(" "),o("p",[o("code",[e._v("getSnapshotBeforeUpdate")]),e._v(": this method gets called before virtual DOM starts to update the DOM based on state change")]),e._v(" "),o("p",[o("code",[e._v("componentWillUnmount")]),e._v(": for unmount a component for avoiding memory leak issue")])])}),[],!1,null,null,null);t.default=r.exports}}]);