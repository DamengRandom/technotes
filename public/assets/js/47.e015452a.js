(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{283:function(s,t,e){"use strict";e.r(t);var a=e(9),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h3",{attrs:{id:"sql-general-recalls"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql-general-recalls"}},[s._v("#")]),s._v(" SQL General recalls")]),s._v(" "),e("p",[e("b",[s._v("1.")]),s._v(" Common tips:")]),s._v(" "),e("ul",[e("li",[s._v("double hash "),e("code",[s._v("(--)")]),s._v(" means not run the code")]),s._v(" "),e("li",[s._v("Usually in SQL, we use "),e("code",[s._v("single quote")])]),s._v(" "),e("li",[e("code",[s._v("<>")]),s._v(" is same as "),e("code",[s._v("!=")]),s._v(", which means not equal to")])]),s._v(" "),e("p",[e("b",[s._v("2.")]),s._v(" "),e("code",[s._v("SQL")]),s._v(": Structured Query Language")]),s._v(" "),e("p",[e("b",[s._v("3.")]),s._v(" Important Query Commands:")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("USE")]),s._v(": use database TEST")]),s._v(" "),e("li",[e("code",[s._v("SELECT")]),s._v(": select database columns (eg: select *)")]),s._v(" "),e("li",[e("code",[s._v("FROM")]),s._v(": from which database table")]),s._v(" "),e("li",[e("code",[s._v("WHERE")]),s._v(": condition")]),s._v(" "),e("li",[e("code",[s._v("ORDER BY")]),s._v(": default is ascending order")]),s._v(" "),e("li",[e("code",[s._v("AS")]),s._v(": give a column custom name")]),s._v(" "),e("li",[e("code",[s._v("AND")]),s._v(" "),e("code",[s._v("OR")]),s._v(" "),e("code",[s._v("NOT")]),s._v(": operators, ☞ venn diagram (eg: <>: means not equal)")]),s._v(" "),e("li",[e("code",[s._v("IN")]),s._v(": contains which values, eg:")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[s._v("  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" customers "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" state "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CO'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'IL'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 'FL’"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),e("ul",[e("li",[e("code",[s._v("LIKE")]),s._v(": find similar data eg:")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[s._v("  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%part_of_string%'")]),s._v("\n")])])]),e("ul",[e("li",[e("code",[s._v("REGEX")]),s._v(": regular expression, powerful for using searching strings inside a table,\n"),e("ul",[e("li",[e("code",[s._v("^")]),s._v(": beginning of the string")]),s._v(" "),e("li",[e("code",[s._v("$")]),s._v(": end of the string")]),s._v(" "),e("li",[e("code",[s._v("|")]),s._v(": logical or (multiple patterns)\neg:")])])])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[s._v("  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" last_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" 'ey$"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v("$’ last_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" ey "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v("\n")])])]),e("ul",[e("li",[e("code",[s._v("IS NULL")]),s._v(" or "),e("code",[s._v("IS NOT NULL")]),s._v(": check condition the attribute is not null or is null records eg:")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[s._v("  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" phone "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v("\n")])])]),e("ul",[e("li",[e("code",[s._v("ORDER BY")]),s._v(": ascending order or descending order eg:")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[s._v("  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" first_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v("\n")])])]),e("ul",[e("li",[e("code",[s._v("LIMIT")]),s._v(": top number of records (eg: top 10 records)")]),s._v(" "),e("li",[e("code",[s._v("JOIN ON")]),s._v(": join two tables together, if we type JOIN means inner join, eg:")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" tableName "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" condition "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tableA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AttributeId "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" tableB"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AttributeId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" customers "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" orders"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("customer_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" customers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("customer_id\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" oi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("order_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("unit_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" order_items oi "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" products p "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" oi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id\n")])])]),e("ul",[e("li",[e("code",[s._v("JOIN")]),s._v(": join across multiple dbs")]),s._v(" "),e("li",[s._v("outer join: "),e("code",[s._v("LEFT JOIN")]),s._v(" & "),e("code",[s._v("RIGHT JOIN")]),s._v(":\n"),e("ul",[e("li",[s._v("eg: join start from left table or start from right table")]),s._v(" "),e("li",[s._v("left: we get all the data from left table (which is from TableName) whether the condition is true or not")]),s._v(" "),e("li",[s._v("right: we get all the data from right table (which is from TableName) whether the condition is true or not")])])])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("quantity "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products p "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" order_items oi "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" oi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id\n")])])]),e("ul",[e("li",[e("code",[s._v("USING")]),s._v(": is a shortcut for p.product_id = oi.product_id, just using this USING(product_id) [ONLY for the SAME attribute name]")]),s._v(" "),e("li",[e("code",[s._v("UNION")]),s._v(": combine data from multiple queries [can be from same table or different table, can be same from same db or different db]!!! eg:")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" orders\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" order_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" orders\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" shipper_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])])]),e("ul",[e("li",[e("code",[s._v("INSERT INTO")]),s._v(": add data to db table, eg:")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" customers "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" last_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" birth_date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" address"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" city"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ella'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wu'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2018-06-01'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Newington'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Sydney'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10000'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),e("ul",[e("li",[e("code",[s._v("UPDATE")]),s._v(": modify current record, eg:")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("columns")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" updated "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("value")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" which "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("data")]),s._v(" needs "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v(" be updated\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- eg:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" sql_store"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("NewTable "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" order_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("\n")])])]),e("ul",[e("li",[e("code",[s._v("DELETE")]),s._v(": remove a record(s), eg:")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" which "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(": which record\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- eg:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" sql_store"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("NewTable "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("ul",[e("li",[e("code",[s._v("CREATE TABLE")]),s._v(": used for copy a table and its records, eg:")])]),s._v(" "),e("div",{staticClass:"language-sql extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" NewTableNAME "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" orders"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[e("b",[s._v("4.")]),s._v(" PostgreSQL queries for array of objects in JSONB format")]),s._v(" "),e("p",[s._v("The major method is: "),e("code",[s._v("jsonb_to_recordset")])]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("-- select email from user_email_configuration, jsonb_to_recordset(user_email_configuration.body->'users') as users(email text)\n-- select * from user_email_configuration where body->>'groupname' = 'gitenant.app-demo'\n")])])]),e("p",[e("b",[s._v("5.")]),s._v(" PostgreSQL query checking the data occurrence count")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("SELECT column5, COUNT(\\*)\nFROM table1\nGROUP BY column5\n")])])]),e("p",[e("b",[s._v("6.")]),s._v(" SQL (relational) vs Non-SQL (non-relational) [Year 2021 - understanding]")]),s._v(" "),e("p",[s._v("SQL: more relational related, like table got connected/closed relationship with another table")]),s._v(" "),e("p",[s._v("Non-SQL: can be treated as a json object "),e("mark",[s._v("tree")]),s._v(", which handles better with unstructured data (JSON object mostly)")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("SQL is easier to read data with powerful queries and hard to save data with multiple validations, Non-SQL is reverse, which means hard to read but easier to save")])]),s._v(" "),e("li",[e("p",[s._v("SQL is not very good to handle tons of request at same time, but Non-SQL is better with it")])]),s._v(" "),e("li",[e("p",[s._v("SQL database like PostgreSQL can save data as JSON format, like JSONB, more like a hybrid tool. But Non-SQL is not able to build any relationships between data, its just a json data.")])])]),s._v(" "),e("p",[s._v("One word, it depends on the specific requirements, there is no "),e("code",[s._v("best")]),s._v(" choice, but we do have "),e("mark",[s._v("suitable")]),s._v(" solutions.")])])}),[],!1,null,null,null);t.default=r.exports}}]);